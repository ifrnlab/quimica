Python 3.4.1 (v3.4.1:c0e311e010fc, May 18 2014, 10:38:22) [MSC v.1600 32 bit (Intel)] on win32
Type "copyright", "credits" or "license()" for more information.
>>> ================================ RESTART ================================
>>> 
{'M': 18, 'K': 2, 'N': 32, 'Q': 8, 'O': 32, 'L': 8, 'P': 18}
[[<turtle.Turtle object at 0x02EC6A90>, <turtle.Turtle object at 0x02EC6B90>], [<turtle.Turtle object at 0x02EC6BF0>, <turtle.Turtle object at 0x02EC6C50>, <turtle.Turtle object at 0x02EC6CB0>, <turtle.Turtle object at 0x02EC6D10>, <turtle.Turtle object at 0x02EC6D70>, <turtle.Turtle object at 0x02EC6DD0>, <turtle.Turtle object at 0x02EC6E30>, <turtle.Turtle object at 0x02EC6E90>], [<turtle.Turtle object at 0x02EC6B30>, <turtle.Turtle object at 0x02EA6BB0>, <turtle.Turtle object at 0x02EC6F30>, <turtle.Turtle object at 0x02EC6F90>, <turtle.Turtle object at 0x02EC6FF0>, <turtle.Turtle object at 0x02EC6FD0>, <turtle.Turtle object at 0x02EE10D0>, <turtle.Turtle object at 0x02EE1130>, <turtle.Turtle object at 0x02EE1190>, <turtle.Turtle object at 0x02EE11F0>, <turtle.Turtle object at 0x02EE1250>, <turtle.Turtle object at 0x02EE12B0>, <turtle.Turtle object at 0x02EE1310>, <turtle.Turtle object at 0x02EE1370>, <turtle.Turtle object at 0x02EE13D0>, <turtle.Turtle object at 0x02EE1430>, <turtle.Turtle object at 0x02EE1490>, <turtle.Turtle object at 0x02EE14F0>], [<turtle.Turtle object at 0x02EE1550>, <turtle.Turtle object at 0x02EE15B0>, <turtle.Turtle object at 0x02EE1610>, <turtle.Turtle object at 0x02EE1670>, <turtle.Turtle object at 0x02EE16D0>, <turtle.Turtle object at 0x02EE1730>, <turtle.Turtle object at 0x02EE1790>, <turtle.Turtle object at 0x02EE17F0>, <turtle.Turtle object at 0x02EE1850>, <turtle.Turtle object at 0x02EE18B0>, <turtle.Turtle object at 0x02EE1910>, <turtle.Turtle object at 0x02EE1970>, <turtle.Turtle object at 0x02EE19D0>, <turtle.Turtle object at 0x02EE1A30>, <turtle.Turtle object at 0x02EE1A90>, <turtle.Turtle object at 0x02EE1AF0>, <turtle.Turtle object at 0x02EE1B50>, <turtle.Turtle object at 0x02EE1BB0>, <turtle.Turtle object at 0x02EE1C10>, <turtle.Turtle object at 0x02EE1C70>, <turtle.Turtle object at 0x02EE1CD0>, <turtle.Turtle object at 0x02EE1D30>, <turtle.Turtle object at 0x02EE1D90>, <turtle.Turtle object at 0x02EE1DF0>, <turtle.Turtle object at 0x02EE1E50>, <turtle.Turtle object at 0x02EE1EB0>, <turtle.Turtle object at 0x02EE1F10>, <turtle.Turtle object at 0x02EE1F70>, <turtle.Turtle object at 0x02EE1FD0>, <turtle.Turtle object at 0x02EE1FB0>, <turtle.Turtle object at 0x02EE1FF0>, <turtle.Turtle object at 0x02EE9110>], [<turtle.Turtle object at 0x02EE9170>, <turtle.Turtle object at 0x02EE91D0>, <turtle.Turtle object at 0x02EE9230>, <turtle.Turtle object at 0x02EE9290>, <turtle.Turtle object at 0x02EE92F0>, <turtle.Turtle object at 0x02EE9350>, <turtle.Turtle object at 0x02EE93B0>, <turtle.Turtle object at 0x02EE9410>, <turtle.Turtle object at 0x02EE9470>, <turtle.Turtle object at 0x02EE94D0>, <turtle.Turtle object at 0x02EE9530>, <turtle.Turtle object at 0x02EE9590>, <turtle.Turtle object at 0x02EE95F0>, <turtle.Turtle object at 0x02EE9650>, <turtle.Turtle object at 0x02EE96B0>, <turtle.Turtle object at 0x02EE9710>, <turtle.Turtle object at 0x02EE9770>, <turtle.Turtle object at 0x02EE97D0>, <turtle.Turtle object at 0x02EE9830>, <turtle.Turtle object at 0x02EE9890>, <turtle.Turtle object at 0x02EE98F0>, <turtle.Turtle object at 0x02EE9950>, <turtle.Turtle object at 0x02EE99B0>, <turtle.Turtle object at 0x02EE9A10>, <turtle.Turtle object at 0x02EE9A70>, <turtle.Turtle object at 0x02EE9AD0>, <turtle.Turtle object at 0x02EE9B30>, <turtle.Turtle object at 0x02EE9B90>, <turtle.Turtle object at 0x02EE9BF0>, <turtle.Turtle object at 0x02EE9C50>, <turtle.Turtle object at 0x02EE9CB0>, <turtle.Turtle object at 0x02EE9D10>], [<turtle.Turtle object at 0x02EE9D70>, <turtle.Turtle object at 0x02EE9DD0>, <turtle.Turtle object at 0x02EE9E30>, <turtle.Turtle object at 0x02EE9E90>, <turtle.Turtle object at 0x02EE9EF0>, <turtle.Turtle object at 0x02EE9F50>, <turtle.Turtle object at 0x02EE9FB0>, <turtle.Turtle object at 0x02EE9FF0>, <turtle.Turtle object at 0x02EE9F90>, <turtle.Turtle object at 0x031810F0>, <turtle.Turtle object at 0x03181150>, <turtle.Turtle object at 0x031811B0>, <turtle.Turtle object at 0x03181210>, <turtle.Turtle object at 0x03181270>, <turtle.Turtle object at 0x031812D0>, <turtle.Turtle object at 0x03181330>, <turtle.Turtle object at 0x03181390>, <turtle.Turtle object at 0x031813F0>], [<turtle.Turtle object at 0x03181450>, <turtle.Turtle object at 0x031814B0>, <turtle.Turtle object at 0x03181510>, <turtle.Turtle object at 0x03181570>, <turtle.Turtle object at 0x031815D0>, <turtle.Turtle object at 0x03181630>, <turtle.Turtle object at 0x03181690>, <turtle.Turtle object at 0x031816F0>]]
{'K': 2, 'L': 4}
[[<turtle.Turtle object at 0x031818B0>, <turtle.Turtle object at 0x03181890>], [<turtle.Turtle object at 0x03181930>, <turtle.Turtle object at 0x03181950>, <turtle.Turtle object at 0x031819F0>, <turtle.Turtle object at 0x03181A10>]]
{'K': 1}
[[<turtle.Turtle object at 0x03181730>]]
>>> de
{(3, 2): 6, (3, 1): 2, (3, 3): 10, (7, 1): 2, (5, 2): 6, (6, 1): 2, (4, 4): 14, (5, 4): 14, (4, 2): 6, (6, 3): 10, (6, 2): 6, (2, 1): 2, (4, 3): 10, (2, 2): 6, (5, 1): 2, (4, 1): 2, (1, 1): 2, (7, 2): 6, (5, 3): 10}
>>> de.get(1,1)
1
>>> de.get((1,1))
2
>>> de.get((1,2))
>>> de.get((1,2),0)
0
>>> de.get((1,2),0)
0
>>> de.get((1,3),0)
0
>>> de.get((1,4),0)
0
>>> de.get((2,1))
2
>>> de.get((2,1),0)
2
>>> for i in range(1,8):
	for j in range(1,4):
		print(de.get((i,j),0), end=' ')
	print()

	
2 0 0 
2 6 0 
2 6 10 
2 6 10 
2 6 10 
2 6 10 
2 6 0 
>>> for i in range(1,8):
	for j in range(1,5):
		print(de.get((i,j),0), end=' ')
	print()

	
2 0 0 0 
2 6 0 0 
2 6 10 0 
2 6 10 14 
2 6 10 14 
2 6 10 0 
2 6 0 0 
>>> for i in range(1,8):
	print(i,': ', end=' ')
	for j in range(1,5):
		print(de.get((i,j),0), end=' ')
	print()

	
1 :  2 0 0 0 
2 :  2 6 0 0 
3 :  2 6 10 0 
4 :  2 6 10 14 
5 :  2 6 10 14 
6 :  2 6 10 0 
7 :  2 6 0 0 
>>> for i in range(1,8):
	print('{}ª Camada: '.format(i), end=' ')
	for j in range(1,5):
		print(de.get((i,j),0), end=' ')
	print()

	
1ª Camada:  2 0 0 0 
2ª Camada:  2 6 0 0 
3ª Camada:  2 6 10 0 
4ª Camada:  2 6 10 14 
5ª Camada:  2 6 10 14 
6ª Camada:  2 6 10 0 
7ª Camada:  2 6 0 0 
>>> for s in range(2,5):
	i = 1
	j = s - i
	while i <= s-1:
		print(de.get((i,j),0))

		
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2de[6,1] = 2; de[6,2] = 6; de[6,3] = 10;
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2
2Traceback (most recent call last):
  File "<pyshell#29>", line 5, in <module>
    print(de.get((i,j),0))
  File "C:\Python34\lib\idlelib\PyShell.py", line 1342, in write
    return self.shell.write(s, self.tags)
KeyboardInterrupt
>>> for s in range(2,5):
	i = 1
	j = s - i
	while i <= s-1:
		print(de.get((i,j),0))
		i += 1

		
2
0
6
0
0
10
>>> for i in range(1,8):
	for j in range(1,4):
		print(de.get((i,j),0), end=' ')
	print()

	
2 0 0 
2 6 0 
2 6 10 
2 6 10 
2 6 10 
2 6 10 
2 6 0 
>>> for s in range(2,5):
	i = 1
	j = s - i
	while i <= s:
		print(de.get((i,j),0))
		i += 1

		
2
2
0
6
6
0
0
10
10
>>> for i in range(1,8):
	for j in range(1,4):
		print(de.get((i,j),0), end=' ')
	print()

	
2 0 0 
2 6 0 
2 6 10 
2 6 10 
2 6 10 
2 6 10 
2 6 0 
>>> for i in range(1,8):
	for j in range(1,5):
		print(de.get((i,j),0), end=' ')
	print()

	
2 0 0 0 
2 6 0 0 
2 6 10 0 
2 6 10 14 
2 6 10 14 
2 6 10 0 
2 6 0 0 
>>> for s in range(2,5):
	i = 1
	j = s - i
	while i <= s:
		print(de.get((i,j),0))
		i += 1

		
2
2
0
6
6
0
0
10
10
>>> for s in range(2,5):
	i = 1
	j = s - i
	while i < s:
		print(de.get((i,j),0))
		i += 1
		j = s - i

		
2
0
2
0
6
2
>>> for s in range(2,6):
	i = 1
	j = s - i
	while i < s:
		print(de.get((i,j),0))
		i += 1
		j = s - i

		
2
0
2
0
6
2
0
0
6
2
>>> for i in range(1,8):
	for j in range(1,5):
		print(de.get((i,j),0), end=' ')
	print()

2 0 0 0 
2 6 0 0 
2 6 10 0 
2 6 10 14 
2 6 10 14 
2 6 10 0 
2 6 0 0 
>>> for s in range(2,9):
	if s <= 5:
		i = 1
		j = s - i
		while i < s:
			print(de.get((i,j),0))
			i += 1
			j = s - i
	else:
		j = 4
		i = s - j
		while j >= 1:
			print(de.get((i,j),0))
			j -= 1
			i = s - j

			
2
0
2
0
6
2
0
0
6
2
0
10
6
2
0
10
6
2
14
10
6
2
>>> for i in range(1,8):
	for j in range(1,5):
		print(de.get((i,j),0), end=' ')
	print()

	
2 0 0 0 
2 6 0 0 
2 6 10 0 
2 6 10 14 
2 6 10 14 
2 6 10 0 
2 6 0 0 
>>> for s in range(2,9):
	if s == 9:
		j = 4
		i = s - j
		while j > 1:
			print(de.get((i,j),0))
			j -= 1
			i = s - j
	elif s <= 5:
		i = 1
		j = s - i
		while i < s:
			print(de.get((i,j),0))
			i += 1
			j = s - i
	else:
		j = 4
		i = s - j
		while j >= 1:
			print(de.get((i,j),0))
			j -= 1
			i = s - j

			
2
0
2
0
6
2
0
0
6
2
0
10
6
2
0
10
6
2
14
10
6
2
>>> for s in range(2,10):
	if s == 9:
		j = 4
		i = s - j
		while j > 1:
			print(de.get((i,j),0))
			j -= 1
			i = s - j
	elif s <= 5:
		i = 1
		j = s - i
		while i < s:
			print(de.get((i,j),0))
			i += 1
			j = s - i
	else:
		j = 4
		i = s - j
		while j >= 1:
			print(de.get((i,j),0))
			j -= 1
			i = s - j

			
2
0
2
0
6
2
0
0
6
2
0
10
6
2
0
10
6
2
14
10
6
2
14
10
6
>>> 
